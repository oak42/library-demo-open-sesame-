<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ackerley.library.modules.sys.repository.BookshelfMapper">

    <sql id="bookshelfColumns"><!--不含pwd、del_flag-->
        id, label, location, remarks
    </sql>

    <resultMap id="bookshelfResult" type="Bookshelf">
        <id column="id" property="ID"/>
        <result column="label" property="label"/>
        <result column="location" property="location"/>
        <result column="remarks" property="remarks"/>
    </resultMap>

    <insert id="createOne" parameterType="Bookshelf">
        INSERT INTO sys_bookshelf ( <include refid="bookshelfColumns"/> )
        VALUES ( #{ID}, #{label}, #{location}, #{remarks} )
    </insert>

    <!--【扣】此条select，对应两个不同形参版本的mapper interface method的？！对应parameterType的有意省略？！-->
    <select id="retrieveOneByID" resultMap="bookshelfResult"><!--【扣】parameterType的有意省略？！模糊性？！-->
        SELECT <include refid="bookshelfColumns"/>
        FROM sys_bookshelf
        WHERE id = #{ID}
 <!--       AND del_flag != #{DEL_FLAG_DELETED}    --><!--【鸣】体会一下：retrieveList时，凭del_flag筛选，出；这里不使用del_flag筛选，也正好适应了string版本parameterType，不存在DEL_FLAG_DELETED-->
    </select>

    <select id="retrieveList" parameterType="Bookshelf" resultMap="bookshelfResult">
        SELECT <include refid="bookshelfColumns"/>
        FROM sys_bookshelf
        WHERE del_flag != #{DEL_FLAG_DELETED}
        <if test="label != null and label != ''">AND label LIKE concat("%",#{label},"%")</if><!--【扣】<if>的test属性中对对象field的引用为何可以不用${}?-->
        <if test="location != null and location != ''">AND location LIKE concat("%",#{location},"%")</if>
        <if test="remarks != null and remarks != ''">AND remarks LIKE concat("%",#{remarks},"%")</if>
        <!--【鸣】注意！对于concat()，任何null参数将导致返回null，于此处造成LIKE null，那就变成只筛选出null filed了；而另外%%则会导致匹配不到null field。所以null和空串都要防-->
    </select>

    <update id="updateOneByID" parameterType="Bookshelf">
        UPDATE sys_bookshelf
        SET
            label = #{label},
            location = #{location},
            remarks = #{remarks}
        WHERE id = #{ID}
    </update>


    <update id="deleteOneByID" parameterType="Bookshelf">
        UPDATE sys_bookshelf
        SET
            del_flag = #{DEL_FLAG_DELETED}
        WHERE id = #{ID}
    </update>
</mapper>
